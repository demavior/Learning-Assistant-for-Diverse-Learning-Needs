# -*- coding: utf-8 -*-
"""FairseqWithMbart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12xpddy2Wj8mzwMN8jeCl0z6nz1DvuWpD
"""

!pip install transformers

# Import necessary libraries
from transformers import MBartForConditionalGeneration, MBart50Tokenizer

# Load pre-trained mBART model and tokenizer
model_name = "facebook/mbart-large-50"
tokenizer = MBart50Tokenizer.from_pretrained(model_name)
model = MBartForConditionalGeneration.from_pretrained(model_name)

# Explicit target language for translation
target_lang = "fr_XX"  # Target language: French
forced_bos_token_id = tokenizer.lang_code_to_id[target_lang]

# Translation function with explicit BOS token handling
def translate(text):
    try:
        # Log the forced BOS token ID
        print(f"Forced BOS token ID for {target_lang}: {forced_bos_token_id}")

        # Manually include the forced BOS token in the input sequence for debugging
        tokenized_input = tokenizer(text, return_tensors="pt")

        # Debug tokenized input
        print(f"Tokenized Input IDs before modification: {tokenized_input['input_ids']}")

        # Modify the tokenized input to start with the forced BOS token explicitly
        tokenized_input['input_ids'][0][0] = forced_bos_token_id
        print(f"Modified Input IDs with forced BOS token: {tokenized_input['input_ids']}")

        # Generate translation
        outputs = model.generate(
            **tokenized_input,
            decoder_start_token_id=forced_bos_token_id,  # Explicit start token to guide translation
            num_beams=5,
            max_length=50,
            early_stopping=True
        )

        # Log generated tokens
        print(f"Generated Output Tokens: {outputs}")

        # Decode the tokens back to readable text
        translated_text = tokenizer.decode(outputs[0], skip_special_tokens=True)

        # Log decoded output text
        print(f"Decoded Text: {translated_text}")

        return translated_text
    except Exception as e:
        print(f"Error during translation: {e}")
        return None


# Test the translation
example_text = "Hello, how are you?"
translated_text = translate(example_text)

# Output results
print(f"Input: {example_text}")
print(f"Translated Text: {translated_text}")